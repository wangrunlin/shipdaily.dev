---
import Layout from '../layouts/Layout.astro';
---

<Layout title="shipdaily.dev - 每日 Ship 挑战">
  <!-- Hero Section -->
  <section class="bg-white border-b border-gray-100" aria-labelledby="hero-heading">
    <div class="max-w-6xl mx-auto py-20 px-4 sm:py-28 sm:px-6 lg:px-8">
      <div class="text-center">
        <div class="mb-8">
          <div class="inline-flex items-center justify-center w-16 h-16 rounded-2xl bg-gray-900 text-white text-2xl font-semibold" aria-hidden="true">
            🚢
          </div>
        </div>
        <h1 id="hero-heading" class="text-4xl font-bold tracking-tight text-gray-900 sm:text-5xl lg:text-6xl">
          每日 Ship 挑战
        </h1>
        <p class="mt-6 text-lg leading-8 text-gray-600 max-w-2xl mx-auto">
          Build in Public，坚持每天编程，记录成长轨迹。<br/>
          通过持续的小步前进，实现技术成长和习惯养成。
        </p>
        <div class="mt-10 flex items-center justify-center gap-x-4">
          <a
            href="#progress"
            class="inline-flex items-center px-4 py-2.5 text-sm font-semibold text-white bg-gray-900 rounded-lg hover:bg-gray-800 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2 transition-colors duration-200 shadow-sm"
            aria-describedby="progress-description"
          >
            查看今日进度
            <svg class="ml-2 w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24" aria-hidden="true">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 9l-7 7-7-7"></path>
            </svg>
          </a>
          <span id="progress-description" class="sr-only">跳转到今日 ShipDaily 进展统计区域</span>
          <a
            href="/about"
            class="inline-flex items-center px-4 py-2.5 text-sm font-semibold text-gray-700 bg-white border border-gray-300 rounded-lg hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2 transition-colors duration-200"
          >
            了解更多
          </a>
        </div>
      </div>
    </div>
  </section>

  <!-- Progress Section -->
  <section id="progress" class="py-20 bg-gray-50" aria-labelledby="progress-heading">
    <div class="max-w-6xl mx-auto px-4 sm:px-6 lg:px-8">
      <div class="text-center mb-16">
        <h2 id="progress-heading" class="text-2xl font-bold text-gray-900">今日进度</h2>
        <p class="mt-2 text-sm text-gray-600">
          wangrunlin 的 ShipDaily 挑战数据
        </p>
      </div>

      <!-- Status Cards -->
      <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4 mb-16" role="region" aria-label="统计卡片">
        <!-- Today's Status -->
        <article class="bg-white rounded-xl border border-gray-200 p-6 hover:shadow-md transition-shadow duration-200" role="img" aria-labelledby="today-status-title" aria-describedby="today-status">
          <div class="flex items-center justify-between mb-4">
            <div class="flex items-center justify-center w-10 h-10 rounded-lg bg-green-50">
              <div class="text-lg text-green-600" id="today-status-icon" aria-hidden="true">✅</div>
            </div>
            <div class="text-2xl font-bold text-gray-900" id="today-status-display" aria-live="polite">-</div>
          </div>
          <h3 id="today-status-title" class="text-sm font-medium text-gray-600">今日状态</h3>
          <p class="text-xs text-gray-500 mt-1" id="today-status" aria-live="polite">检查中...</p>
        </article>

        <!-- Streak -->
        <div class="bg-white rounded-xl border border-gray-200 p-6 hover:shadow-md transition-shadow duration-200">
          <div class="flex items-center justify-between mb-4">
            <div class="flex items-center justify-center w-10 h-10 rounded-lg bg-orange-50">
              <div class="text-lg text-orange-600">🔥</div>
            </div>
            <div class="text-2xl font-bold text-gray-900" id="streak-count">-</div>
          </div>
          <h3 class="text-sm font-medium text-gray-600">连续天数</h3>
          <p class="text-xs text-gray-500 mt-1">当前连击记录</p>
        </div>

        <!-- Monthly Progress -->
        <div class="bg-white rounded-xl border border-gray-200 p-6 hover:shadow-md transition-shadow duration-200">
          <div class="flex items-center justify-between mb-4">
            <div class="flex items-center justify-center w-10 h-10 rounded-lg bg-blue-50">
              <div class="text-lg text-blue-600">📊</div>
            </div>
            <div class="text-2xl font-bold text-gray-900" id="monthly-count">-</div>
          </div>
          <h3 class="text-sm font-medium text-gray-600">本月完成</h3>
          <p class="text-xs text-gray-500 mt-1">本月进度统计</p>
        </div>

        <!-- Total Days -->
        <div class="bg-white rounded-xl border border-gray-200 p-6 hover:shadow-md transition-shadow duration-200">
          <div class="flex items-center justify-between mb-4">
            <div class="flex items-center justify-center w-10 h-10 rounded-lg bg-purple-50">
              <div class="text-lg text-purple-600">📈</div>
            </div>
            <div class="text-2xl font-bold text-gray-900" id="total-count">-</div>
          </div>
          <h3 class="text-sm font-medium text-gray-600">总计天数</h3>
          <p class="text-xs text-gray-500 mt-1">累计 Ship 天数</p>
        </div>
      </div>

      <!-- Calendar View -->
      <div class="bg-white rounded-xl border border-gray-200 p-8">
        <div class="text-center mb-8">
          <h3 class="text-lg font-semibold text-gray-900">最近 7 天</h3>
          <p class="text-sm text-gray-600 mt-1">每日提交状态</p>
        </div>
        
        <div class="grid grid-cols-7 gap-3 mb-6" id="calendar-week">
          <!-- Calendar will be populated by JavaScript -->
        </div>
        
        <!-- Data Source Indicator -->
        <div class="border-t border-gray-100 pt-4 text-center" id="data-source-indicator">
          <div class="inline-flex items-center text-xs text-gray-500">
            <svg class="w-3 h-3 mr-1.5 animate-spin hidden" id="loading-icon" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15"></path>
            </svg>
            <span id="data-source-text">加载数据中...</span>
          </div>
        </div>
      </div>
    </div>
  </section>

  <!-- About Section -->
  <section class="py-20 bg-white">
    <div class="max-w-4xl mx-auto px-4 sm:px-6 lg:px-8 text-center">
      <h2 class="text-2xl font-bold text-gray-900 mb-4">
        什么是 ShipDaily 挑战？
      </h2>
      <p class="text-base text-gray-600 leading-relaxed max-w-2xl mx-auto mb-8">
        ShipDaily 是一个每日编程习惯养成挑战。通过坚持每天至少提交一次代码，
        培养持续学习和创造的习惯。这不仅是关于代码，更是关于持续的进步和成长。
      </p>
      <div class="flex flex-col sm:flex-row items-center justify-center gap-3">
        <a
          href="/about"
          class="inline-flex items-center px-4 py-2.5 text-sm font-semibold text-white bg-gray-900 rounded-lg hover:bg-gray-800 transition-colors duration-200 w-full sm:w-auto justify-center"
        >
          了解更多
        </a>
        <a
          href="/community"
          class="inline-flex items-center px-4 py-2.5 text-sm font-semibold text-gray-700 bg-white border border-gray-300 rounded-lg hover:bg-gray-50 transition-colors duration-200 w-full sm:w-auto justify-center"
        >
          加入社区
        </a>
      </div>
    </div>
  </section>
</Layout>

<script>
  // Load stats from GitHub API
  async function loadStats() {
    try {
      const response = await fetch('/api/stats');
      const stats = await response.json();
      
      if (response.ok) {
        updateUI(stats);
      } else {
        console.error('Failed to load stats:', stats.error);
        // Keep default mock data if API fails
      }
    } catch (error) {
      console.error('Failed to fetch stats:', error);
      // Keep default mock data if API fails
    }
  }

  // Update UI with real data
  function updateUI(stats: any) {
    // Update status indicators
    const todayStatusEl = document.getElementById('today-status');
    const todayStatusDisplayEl = document.getElementById('today-status-display');
    const todayStatusIconEl = document.getElementById('today-status-icon');
    const streakCountEl = document.getElementById('streak-count');
    const monthlyCountEl = document.getElementById('monthly-count');
    const totalCountEl = document.getElementById('total-count');
    
    // Update today's status
    if (todayStatusEl && todayStatusDisplayEl && todayStatusIconEl) {
      if (stats.todayStatus) {
        todayStatusEl.textContent = '已完成';
        todayStatusDisplayEl.textContent = '✓';
        todayStatusDisplayEl.className = 'text-2xl font-bold text-green-600';
        todayStatusIconEl.textContent = '✅';
        const greenParent = todayStatusIconEl.closest('.bg-green-50');
        if (greenParent) greenParent.className = 'flex items-center justify-center w-10 h-10 rounded-lg bg-green-50';
      } else {
        todayStatusEl.textContent = '未完成';
        todayStatusDisplayEl.textContent = '×';
        todayStatusDisplayEl.className = 'text-2xl font-bold text-red-600';
        todayStatusIconEl.textContent = '❌';
        const redParent = todayStatusIconEl.closest('.bg-green-50');
        if (redParent) redParent.className = 'flex items-center justify-center w-10 h-10 rounded-lg bg-red-50';
      }
    }
    
    if (streakCountEl) streakCountEl.textContent = stats.streakCount.toString();
    if (monthlyCountEl) monthlyCountEl.textContent = `${stats.monthlyCount}/${stats.monthlyTotal}`;
    if (totalCountEl) totalCountEl.textContent = stats.totalCount.toString();
    
    // Update calendar
    updateCalendar(stats.recentDays);
    
    // Update data source indicator
    updateDataSourceIndicator(stats);
    
    // 跟踪数据加载事件
    if (typeof window !== 'undefined') {
      import('../lib/analytics').then(({ Analytics }) => {
        Analytics.trackShipDaily.viewStats(stats.dataSource);
      });
    }
  }

  // Update data source indicator
  function updateDataSourceIndicator(stats: any) {
    const loadingIcon = document.getElementById('loading-icon');
    const dataSourceText = document.getElementById('data-source-text');
    
    if (loadingIcon) loadingIcon.classList.add('hidden');
    
    if (dataSourceText && stats) {
      const lastUpdated = stats.lastUpdated ? new Date(stats.lastUpdated) : new Date();
      const timeAgo = getTimeAgo(lastUpdated);
      
      if (stats.dataSource === 'real') {
        dataSourceText.innerHTML = `
          <span class="text-green-600">●</span>
          <span class="ml-1">实时数据，${timeAgo}更新</span>
        `;
      } else if (stats.dataSource === 'fallback') {
        dataSourceText.innerHTML = `
          <span class="text-yellow-600">●</span>
          <span class="ml-1">备用数据，${timeAgo}更新</span>
        `;
      } else if (stats.dataSource === 'mock') {
        dataSourceText.innerHTML = `
          <span class="text-red-600">●</span>
          <span class="ml-1">演示数据（非真实数据）</span>
        `;
      }
    }
  }

  // Get time ago string
  function getTimeAgo(date: Date) {
    const now = new Date();
    const diffMs = now.getTime() - date.getTime();
    const diffMinutes = Math.floor(diffMs / 60000);
    const diffHours = Math.floor(diffMinutes / 60);
    const diffDays = Math.floor(diffHours / 24);
    
    if (diffMinutes < 1) return '刚刚';
    if (diffMinutes < 60) return `${diffMinutes}分钟前`;
    if (diffHours < 24) return `${diffHours}小时前`;
    return `${diffDays}天前`;
  }

  // Initialize calendar with data
  function updateCalendar(recentDays = null) {
    const calendar = document.getElementById('calendar-week');
    if (!calendar) return;

    calendar.innerHTML = ''; // Clear existing content
    
    const today = new Date();
    const days = ['日', '一', '二', '三', '四', '五', '六'];
    
    for (let i = 6; i >= 0; i--) {
      const date = new Date(today);
      date.setDate(date.getDate() - i);
      
      const dayElement = document.createElement('div');
      dayElement.className = 'flex flex-col items-center p-3 rounded-xl border transition-colors duration-200';
      
      // Use real data if available, otherwise use mock data
      const isCompleted = recentDays ? recentDays[6 - i] : (Math.random() > 0.3);
      
      if (isCompleted) {
        dayElement.className += ' bg-green-50 border-green-200 hover:bg-green-100';
        dayElement.innerHTML = `
          <div class="text-xs font-medium text-green-800 mb-1">${days[date.getDay()]}</div>
          <div class="text-sm font-bold text-green-900 mb-2">${date.getDate()}</div>
          <div class="w-5 h-5 rounded-full bg-green-500 flex items-center justify-center">
            <svg class="w-3 h-3 text-white" fill="currentColor" viewBox="0 0 20 20">
              <path fill-rule="evenodd" d="M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z" clip-rule="evenodd"/>
            </svg>
          </div>
        `;
      } else {
        dayElement.className += ' bg-gray-50 border-gray-200 hover:bg-gray-100';
        dayElement.innerHTML = `
          <div class="text-xs font-medium text-gray-600 mb-1">${days[date.getDay()]}</div>
          <div class="text-sm font-bold text-gray-900 mb-2">${date.getDate()}</div>
          <div class="w-5 h-5 rounded-full bg-gray-300 flex items-center justify-center">
            <svg class="w-3 h-3 text-gray-600" fill="currentColor" viewBox="0 0 20 20">
              <path fill-rule="evenodd" d="M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z" clip-rule="evenodd"/>
            </svg>
          </div>
        `;
      }
      
      calendar.appendChild(dayElement);
    }
  }

  // Initialize when the DOM is loaded
  document.addEventListener('DOMContentLoaded', async () => {
    // Show loading state
    const loadingIcon = document.getElementById('loading-icon');
    const dataSourceText = document.getElementById('data-source-text');
    
    if (loadingIcon) loadingIcon.classList.remove('hidden');
    if (dataSourceText) dataSourceText.textContent = '加载数据中...';
    
    // Initialize with mock data first for immediate display
    updateCalendar();
    
    // Then load real data
    await loadStats();
  });

  // Performance monitoring
  if ('requestIdleCallback' in window) {
    requestIdleCallback(() => {
      // 在空闲时间初始化性能监控
      import('../lib/web-vitals').then(({ WebVitals }) => {
        WebVitals.init();
        
        // 5秒后报告指标
        setTimeout(() => {
          WebVitals.reportMetrics();
        }, 5000);
      });
      
      // 初始化可访问性功能
      import('../lib/accessibility').then(({ AccessibilityHelper }) => {
        AccessibilityHelper.init();
      });
      
      // 初始化移动端兼容性
      import('../lib/mobile-compat').then(({ MobileCompatibility }) => {
        MobileCompatibility.init();
      });
      
      // 初始化分析跟踪
      import('../lib/analytics').then(({ Analytics }) => {
        Analytics.init();
      });
    });
  }
  
</script>
